"""Add company, purpose, and user_type fields to User model

Revision ID: 033bac35a684
Revises: c301ac188f1b
Create Date: 2025-07-18 17:09:05.622824

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '033bac35a684'
down_revision: Union[str, None] = 'c301ac188f1b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('admin', 'client', name='user_type_enum').create(op.get_bind())
    op.add_column('user', sa.Column('company', sa.String(length=255), nullable=True))
    op.add_column('user', sa.Column('purpose', sa.String(length=255), nullable=True))
    # Add column with default 'client' but initially nullable to handle existing rows
    op.add_column('user', sa.Column('user_type', postgresql.ENUM('admin', 'client', name='user_type_enum', create_type=False), nullable=False, server_default='client'))
    
    # Update all existing users to 'admin' type
    op.execute("UPDATE \"user\" SET user_type = 'admin'")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'user_type')
    op.drop_column('user', 'purpose')
    op.drop_column('user', 'company')
    sa.Enum('admin', 'client', name='user_type_enum').drop(op.get_bind())
    # ### end Alembic commands ###
