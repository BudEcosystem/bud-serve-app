"""Updated Model, Licence, Paper Tables

Revision ID: f040fc25b476
Revises: 64e788fd946c
Create Date: 2024-12-06 08:35:11.658385

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f040fc25b476'
down_revision: Union[str, None] = '64e788fd946c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('adapter', 'merge', 'quantized', 'finetune', name='base_model_relation_enum').create(op.get_bind())
    op.add_column('model', sa.Column('bud_verified', sa.Boolean(), server_default=sa.text('false'), nullable=False))
    op.add_column('model', sa.Column('scan_verified', sa.Boolean(), server_default=sa.text('false'), nullable=False))
    op.add_column('model', sa.Column('eval_verified', sa.Boolean(), server_default=sa.text('false'), nullable=False))
    op.add_column('model', sa.Column('strengths', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('model', sa.Column('limitations', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('model', sa.Column('languages', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('model', sa.Column('use_cases', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('model', sa.Column('minimum_requirements', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('model', sa.Column('examples', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('model', sa.Column('base_model', sa.String(), nullable=True))
    op.add_column('model', sa.Column('base_model_relation', postgresql.ENUM('adapter', 'merge', 'quantized', 'finetune', name='base_model_relation_enum', create_type=False), nullable=True))
    op.add_column('model', sa.Column('model_type', sa.String(), nullable=True))
    op.add_column('model', sa.Column('family', sa.String(), nullable=True))
    op.add_column('model', sa.Column('num_layers', sa.Integer(), nullable=True))
    op.add_column('model', sa.Column('hidden_size', sa.BigInteger(), nullable=True))
    op.add_column('model', sa.Column('context_length', sa.BigInteger(), nullable=True))
    op.add_column('model', sa.Column('torch_dtype', sa.String(), nullable=True))
    op.add_column('model', sa.Column('architecture', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('model_licenses', sa.Column('url', sa.String(), nullable=True))
    op.add_column('model_licenses', sa.Column('faqs', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('paper_published', sa.Column('authors', postgresql.ARRAY(sa.String()), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('paper_published', 'authors')
    op.drop_column('model_licenses', 'faqs')
    op.drop_column('model_licenses', 'url')
    op.drop_column('model', 'architecture')
    op.drop_column('model', 'torch_dtype')
    op.drop_column('model', 'context_length')
    op.drop_column('model', 'hidden_size')
    op.drop_column('model', 'num_layers')
    op.drop_column('model', 'family')
    op.drop_column('model', 'model_type')
    op.drop_column('model', 'base_model_relation')
    op.drop_column('model', 'base_model')
    op.drop_column('model', 'examples')
    op.drop_column('model', 'minimum_requirements')
    op.drop_column('model', 'use_cases')
    op.drop_column('model', 'languages')
    op.drop_column('model', 'limitations')
    op.drop_column('model', 'strengths')
    op.drop_column('model', 'eval_verified')
    op.drop_column('model', 'scan_verified')
    op.drop_column('model', 'bud_verified')
    sa.Enum('adapter', 'merge', 'quantized', 'finetune', name='base_model_relation_enum').drop(op.get_bind())
    # ### end Alembic commands ###
