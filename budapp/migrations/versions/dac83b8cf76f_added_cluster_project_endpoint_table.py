"""Added cluster, project, endpoint table

Revision ID: dac83b8cf76f
Revises: 7420487c5f37
Create Date: 2024-11-12 06:57:41.104642

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dac83b8cf76f'
down_revision: Union[str, None] = '7420487c5f37'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cluster',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('type', sa.Enum('cpu', 'gpu', 'hpu', name='cluster_type_enum'), nullable=False),
    sa.Column('platform', sa.Enum('kubernetes', 'openshift', name='cluster_platform_enum'), nullable=False),
    sa.Column('configuration', sa.String(), nullable=False),
    sa.Column('host', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('available', 'not_available', 'registering', 'error', name='cluster_status_enum'), nullable=False),
    sa.Column('total_workers', sa.Integer(), nullable=False),
    sa.Column('available_workers', sa.Integer(), nullable=False),
    sa.Column('used_workers', sa.Integer(), nullable=False),
    sa.Column('kube_nodes', sa.Integer(), nullable=False),
    sa.Column('kubernetes_metadata', sa.String(), nullable=True),
    sa.Column('status_sync_at', sa.DateTime(), nullable=True),
    sa.Column('threads_per_core', sa.Integer(), nullable=True),
    sa.Column('core_count', sa.Integer(), nullable=True),
    sa.Column('enable_master_node', sa.Boolean(), nullable=False),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('cluster_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('fk_cluster_created_by_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cluster'))
    )
    op.create_table('project',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('icon', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('benchmark', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('fk_project_created_by_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project'))
    )
    op.create_table('endpoint',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('project_id', sa.Uuid(), nullable=False),
    sa.Column('model_id', sa.Uuid(), nullable=False),
    sa.Column('cache_enabled', sa.Boolean(), nullable=False),
    sa.Column('cache_config', sa.String(), nullable=True),
    sa.Column('cluster_id', sa.Uuid(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('namespace', sa.String(), nullable=False),
    sa.Column('replicas', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('running', 'failure', 'deploying', 'unhealthy', 'deleting', name='endpoint_status_enum'), nullable=False),
    sa.Column('status_sync_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['cluster_id'], ['cluster.id'], name=op.f('fk_endpoint_cluster_id_cluster'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('fk_endpoint_created_by_user')),
    sa.ForeignKeyConstraint(['model_id'], ['model.id'], name=op.f('fk_endpoint_model_id_model'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name=op.f('fk_endpoint_project_id_project'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_endpoint'))
    )
    op.create_table('project_user_association',
    sa.Column('project_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name=op.f('fk_project_user_association_project_id_project')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_project_user_association_user_id_user')),
    sa.PrimaryKeyConstraint('project_id', 'user_id', name=op.f('pk_project_user_association'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('project_user_association')
    op.drop_table('endpoint')
    op.drop_table('project')
    op.drop_table('cluster')
    # ### end Alembic commands ###
