"""added dataset table.

Revision ID: 1f39b36fcfb1
Revises: e63b762b3386
Create Date: 2025-03-26 05:10:51.647731

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "1f39b36fcfb1"
down_revision: Union[str, None] = "e63b762b3386"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("active", "inactive", name="dataset_status_enum").create(op.get_bind())
    op.create_table(
        "dataset",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("tags", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("hf_hub_url", sa.String(), nullable=True),
        sa.Column("ms_hub_url", sa.String(), nullable=True),
        sa.Column("script_url", sa.String(), nullable=True),
        sa.Column("filename", sa.String(), nullable=True),
        sa.Column("formatting", sa.String(), nullable=True),
        sa.Column("ranking", sa.Boolean(), nullable=False),
        sa.Column("subset", sa.String(), nullable=True),
        sa.Column("split", sa.String(), nullable=True),
        sa.Column("folder", sa.String(), nullable=True),
        sa.Column("num_samples", sa.Integer(), nullable=True),
        sa.Column("columns", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "status",
            postgresql.ENUM("active", "inactive", name="dataset_status_enum", create_type=False),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_dataset")),
        sa.UniqueConstraint("name", name=op.f("uq_dataset_name")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("dataset")
    sa.Enum("active", "inactive", name="dataset_status_enum").drop(op.get_bind())
    # ### end Alembic commands ###
