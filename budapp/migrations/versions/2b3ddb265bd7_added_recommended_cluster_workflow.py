"""Added Recommended Cluster, Workflow.

Revision ID: 2b3ddb265bd7
Revises: e5538df6a487
Create Date: 2025-03-25 03:27:30.073953

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "2b3ddb265bd7"
down_revision: Union[str, None] = "e5538df6a487"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "workflow_runs",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("workflow_id", sa.UUID(), nullable=False),
        sa.Column("workflow_name", sa.String(length=128), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("input", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("output", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("error", sa.String(length=255), nullable=True),
        sa.Column("notification_status", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("num_retries", sa.Integer(), nullable=False),
        sa.Column("max_retries", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("workflow_id"),
    )
    op.create_table(
        "workflow_steps",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("workflow_id", sa.UUID(), nullable=False),
        sa.Column("step_id", sa.String(length=128), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("notification_status", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("num_retries", sa.Integer(), nullable=False),
        sa.Column("max_retries", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["workflow_id"],
            ["workflow_runs.workflow_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "model_cluster_recommended",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("model_id", sa.Uuid(), nullable=False),
        sa.Column("cluster_id", sa.Uuid(), nullable=False),
        sa.Column("hardware_type", postgresql.ARRAY(sa.String()), nullable=False),
        sa.Column("cost_per_million_tokens", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["cluster_id"], ["cluster.id"], name=op.f("fk_model_cluster_recommended_cluster_id_cluster")
        ),
        sa.ForeignKeyConstraint(["model_id"], ["model.id"], name=op.f("fk_model_cluster_recommended_model_id_model")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_model_cluster_recommended")),
    )
    op.add_column("model", sa.Column("recommended_cluster_sync_at", sa.DateTime(timezone=True), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("model", "recommended_cluster_sync_at")
    op.drop_table("model_cluster_recommended")
    op.drop_table("workflow_steps")
    op.drop_table("workflow_runs")
    # ### end Alembic commands ###
