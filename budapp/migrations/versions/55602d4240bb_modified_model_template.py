"""Modified Model Template.

Revision ID: 55602d4240bb
Revises: 2ce2068d3257
Create Date: 2024-11-19 10:14:11.127218

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from alembic_postgresql_enum import TableReference


# revision identifiers, used by Alembic.
revision: str = "55602d4240bb"
down_revision: Union[str, None] = "2ce2068d3257"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("pretrained", "chat", "codegen", name="model_type_enum").drop(op.get_bind())
    sa.Enum("cpu", "gpu", "hpu", name="cluster_type_enum").drop(op.get_bind())
    sa.Enum("kubernetes", "openshift", name="cluster_platform_enum").drop(op.get_bind())
    op.sync_enum_values(
        "public",
        "template_type_enum",
        [
            "summarization",
            "chat",
            "question_answering",
            "rag",
            "code_gen",
            "code_translation",
            "entity_extraction",
            "sentiment_analysis",
            "document_analysis",
            "other",
        ],
        [TableReference(table_schema="public", table_name="model_template", column_name="template_type")],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        "public",
        "template_type_enum",
        [
            "summarization",
            "chat",
            "question_answering",
            "rag",
            "code_gen",
            "code_translation",
            "entity_extraction",
            "sentiment_analysis",
            "document_analysis",
        ],
        [TableReference(table_schema="public", table_name="model_template", column_name="template_type")],
        enum_values_to_rename=[],
    )
    sa.Enum("kubernetes", "openshift", name="cluster_platform_enum").create(op.get_bind())
    sa.Enum("cpu", "gpu", "hpu", name="cluster_type_enum").create(op.get_bind())
    sa.Enum("pretrained", "chat", "codegen", name="model_type_enum").create(op.get_bind())
    # ### end Alembic commands ###
