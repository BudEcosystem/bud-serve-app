name: Build and Push Docker Image on Release

on:
  release:
    types: [created]

jobs:
  lint-test-secure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          pip install -r requirements-lint.txt
          pip install bandit[toml]

      - name: Run Ruff linter
        continue-on-error: true
        run: ruff check .

      - name: Run Ruff formatter check
        continue-on-error: true
        run: ruff format --check .

      - name: Run mypy type checker
        continue-on-error: true
        run: mypy budapp/

      - name: Run bandit (security check)
        continue-on-error: true
        run: bandit -r budapp/ -ll

      - name: Run tests
        continue-on-error: true
        run: pytest tests/

  build-and-push:
    needs: lint-test-secure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract tag name
        id: extract_tag
        run: |
          RAW_TAG=${GITHUB_REF#refs/tags/}
          CLEAN_TAG=${RAW_TAG#v}
          echo "RELEASE_TAG=$CLEAN_TAG" >> $GITHUB_ENV

      - name: Save private key to file
        run: |
          echo "${{ secrets.PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Save public key to file
        run: |
          echo "${{ secrets.PUBLIC_KEY }}" > public_key.pem
          chmod 600 public_key.pem

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: ./deploy/Dockerfile
          tags: budstudio/budapp:${{ env.RELEASE_TAG }}
